选课系统-·-
假定学生数量很多，学生对象拥有学号，班级，姓名，性别这四个属性。
课程对象拥有课程编号，课程名称，课程容量，剩余容量，已选人数这五个属性。
选课信息包括学号，课程编号，选课时间这三个属性。

要求：
必须使用文件来保存以上信息，不允许使用任何数据库系统。
其中学生信息和选课信息必须支持缓存，假定学生信息
数据量特别大（记录数百万以上）。
课程信息由于数据量小（假定3门课程），可以将所有数据全部缓存到内存中。
而学生信息和选课信息要求必须部分缓存。
缓存的算法没有要求，尽可能提高缓存的效率。
要求学生信息必须提供学号索引，学号是唯一的。

系统必须满足分布式计算的要求，必须支持并发。
系统必须模拟出100名学生并发选课（使用多线程技术）。

系统提供添加课程，删除课程的功能，删除课程只能在选课人数为0的情况下删除。
系统提供选课，退选功能。
系统提供课程查询功能。

必须保证选课逻辑正确（不能超课程容量）
必须保证并发选课正确（多线程同步，锁机制）

文件中的数据记录全部定义为定长数据。

其中数据服务系统（数据库系统）必须是独立的进程，通过网络提供数据操作。

选课系统中的业务逻辑功能，例如，选课，退选，也必须是独立的进程，
尽可能将业务功能定义在这个进程中。

客户操作必须通过命令行来完成，不许使用图形用户界面，客户操作界面也定义
在一个进程中。所以，检查作业时，首先启动“数据服务系统”这个进程。
然后，启动“选课系统“进程。最后，启动基于命令行操作的客户端进程，完成选课，
退选。

可以提供增删改查学生信息，增删改查课程信息等功能（不必全做，可以指完成部分功能）。

这三个进程运行检查之后。启动最后一个进程，在这个进程中模拟100个学生并发选课。
本系统提供的选课功能尽管是模拟高校的选课系统，但是还是要求具有一定的合理性。

系统对基于文本的命令行（黑窗口）的界面设计不做要求。能完成操作就好。

模拟并发选课后，需要检查并发处理结果。
例如，选课信息，课程信息等。观察并发选课是否出现问题。

假定计算设备内存足够大，尽可能使用内存（但不允许将所有学生信息全部缓存到内存中）。
本系统的设计目标是高并发，高效率，高可靠性。
网络连接信息必须定义在不同的配置文件中。不允许硬编码在代码中。
本系统不需要身份验证。

本次大作业要求必须组队，不允许个人组队。组队人数可以是4人，3人，2人。
作业检查每个同学都要独立完成，同组的同学一起检查，但是，需要独立完成
助教指定的操作。

大作业必须纸面文档。文档的封面格式交作业之前确定。

本次大作业要求如有不清楚的地方，大家可以提问，大作业的要求可以微调。
但是，截至到6月29日，大作业要求不做改动了。

期末大作业分数占期末总成绩的一半。




